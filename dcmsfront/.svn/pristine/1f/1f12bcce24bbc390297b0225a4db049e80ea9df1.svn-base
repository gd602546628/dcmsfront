package com.kissdental.weixin.controller;

import com.kissdental.weixin.common.ApiResult;
import com.kissdental.weixin.common.Page;
import com.kissdental.weixin.entity.Article;
import com.kissdental.weixin.entity.Category;
import com.kissdental.weixin.entity.Link;
import com.kissdental.weixin.entity.Site;
import com.kissdental.weixin.service.*;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Created by dartagnan on 2017/12/20.
 */
@Controller
@RequestMapping("/cms")
public class CmsController {
    @Autowired
    private SiteService siteService;
    @Autowired
    private CategoryService categoryService;
    @Autowired
    private ArticleService articleService;
    @Autowired
    private ArticleDataService articleDataService;
    @Autowired
    private LinkService linkService;

    @ResponseBody
    @RequestMapping("/getCategorys")
    public ApiResult getCategorysBySiteId( HttpServletResponse response, String siteId,String parentId){
        ApiResult result = new ApiResult(response);
        try {
            if(StringUtils.isEmpty(parentId)){
                parentId = "1";
            }
            if(StringUtils.isNotEmpty(siteId)){
                Category parent = new Category(parentId);
                Category category = new Category(parent);
                category.setSite(new Site(siteId));
                result.setData(categoryService.findList(category));
                result.setMesg("查询成功");
                result.setCode(ApiResult.CODE_SUCCESS);
            }else{
                result.setMesg("参数错误，查询失败");
                result.setCode(ApiResult.CODE_FAILURE);
            }
        } catch (Exception e) {
            result.setMesg("查询失败");
            result.setCode(ApiResult.CODE_FAILURE);
        }
        return result;
    }

    @ResponseBody
    @RequestMapping("/getArticleList")
    public ApiResult getArticlesByCategoryId(HttpServletRequest request,HttpServletResponse response,String categoryId){
        ApiResult result = new ApiResult(response);
        try {
            Article article = new Article();
            Category category = new Category();
            category.setId(categoryId);
            article.setCategory(category);
            Page<Article> page = articleService.findPage(new Page<Article>(request, response), article, true);
            result.setPageData(page);
            result.setCode(ApiResult.CODE_SUCCESS);
            result.setMesg("查询成功");
        }catch (Exception e){
            result.setCode(ApiResult.CODE_FAILURE);
            result.setMesg("查询失败");
        }
        return result;
    }

    @ResponseBody
    @RequestMapping("/getLinkList")
    public ApiResult getLinksByCategoryId(HttpServletRequest request,HttpServletResponse response,String categoryId){
        ApiResult result = new ApiResult(response);
        try {
            Link link = new Link();
            Category category = new Category();
            category.setId(categoryId);
            link.setCategory(category);
            Page<Link> page = linkService.findPage(new Page<Link>(request, response), link, true);
            result.setPageData(page);
            result.setCode(ApiResult.CODE_SUCCESS);
            result.setMesg("查询成功");
        }catch (Exception e){
            result.setCode(ApiResult.CODE_FAILURE);
            result.setMesg("查询失败");
            e.printStackTrace();
        }
        return result;
    }

    @ResponseBody
    @RequestMapping("/getArticleData")
    public ApiResult getArticleDataByArticleId(HttpServletResponse response,String articleId){
        ApiResult result = new ApiResult(response);
        try {
            if(StringUtils.isNotEmpty(articleId)){
                Article article = articleService.get(articleId);
                article.setArticleData(articleDataService.get(article.getId()));
                result.setData(article);
                result.setCode(ApiResult.CODE_SUCCESS);
                result.setMesg("查询成功");
            }else {
                result.setCode(ApiResult.CODE_FAILURE);
                result.setMesg("参数为空，查询失败");
            }
        }catch (Exception e){
            result.setCode(ApiResult.CODE_FAILURE);
            result.setMesg("查询失败");
        }
        return result;
    }
}
